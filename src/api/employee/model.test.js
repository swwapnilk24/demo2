import { Employee } from '.'

let employee

beforeEach(async () => {
  employee = await Employee.create({ FirstName: 'test', LastName: 'test', MiddleName: 'test', Sufix: 'test', DisplayName: 'test', FormalName: 'test', Title: 'test', BirthName: 'test', Initials: 'test', Prefix: 'test', Gender: 'test', MaritalStatus: 'test', MaritalStatusSince: 'test', SecondNationality: 'test', ThirdNationality: 'test', NativePreferredLanguage: 'test', ChallengeStatus: 'test', CertificateStartDate: 'test', CertificateEndDate: 'test' })
})

describe('view', () => {
  it('returns simple view', () => {
    const view = employee.view()
    expect(typeof view).toBe('object')
    expect(view.id).toBe(employee.id)
    expect(view.FirstName).toBe(employee.FirstName)
    expect(view.LastName).toBe(employee.LastName)
    expect(view.MiddleName).toBe(employee.MiddleName)
    expect(view.Sufix).toBe(employee.Sufix)
    expect(view.DisplayName).toBe(employee.DisplayName)
    expect(view.FormalName).toBe(employee.FormalName)
    expect(view.Title).toBe(employee.Title)
    expect(view.BirthName).toBe(employee.BirthName)
    expect(view.Initials).toBe(employee.Initials)
    expect(view.Prefix).toBe(employee.Prefix)
    expect(view.Gender).toBe(employee.Gender)
    expect(view.MaritalStatus).toBe(employee.MaritalStatus)
    expect(view.MaritalStatusSince).toBe(employee.MaritalStatusSince)
    expect(view.SecondNationality).toBe(employee.SecondNationality)
    expect(view.ThirdNationality).toBe(employee.ThirdNationality)
    expect(view.NativePreferredLanguage).toBe(employee.NativePreferredLanguage)
    expect(view.ChallengeStatus).toBe(employee.ChallengeStatus)
    expect(view.CertificateStartDate).toBe(employee.CertificateStartDate)
    expect(view.CertificateEndDate).toBe(employee.CertificateEndDate)
    expect(view.createdAt).toBeTruthy()
    expect(view.updatedAt).toBeTruthy()
  })

  it('returns full view', () => {
    const view = employee.view(true)
    expect(typeof view).toBe('object')
    expect(view.id).toBe(employee.id)
    expect(view.FirstName).toBe(employee.FirstName)
    expect(view.LastName).toBe(employee.LastName)
    expect(view.MiddleName).toBe(employee.MiddleName)
    expect(view.Sufix).toBe(employee.Sufix)
    expect(view.DisplayName).toBe(employee.DisplayName)
    expect(view.FormalName).toBe(employee.FormalName)
    expect(view.Title).toBe(employee.Title)
    expect(view.BirthName).toBe(employee.BirthName)
    expect(view.Initials).toBe(employee.Initials)
    expect(view.Prefix).toBe(employee.Prefix)
    expect(view.Gender).toBe(employee.Gender)
    expect(view.MaritalStatus).toBe(employee.MaritalStatus)
    expect(view.MaritalStatusSince).toBe(employee.MaritalStatusSince)
    expect(view.SecondNationality).toBe(employee.SecondNationality)
    expect(view.ThirdNationality).toBe(employee.ThirdNationality)
    expect(view.NativePreferredLanguage).toBe(employee.NativePreferredLanguage)
    expect(view.ChallengeStatus).toBe(employee.ChallengeStatus)
    expect(view.CertificateStartDate).toBe(employee.CertificateStartDate)
    expect(view.CertificateEndDate).toBe(employee.CertificateEndDate)
    expect(view.createdAt).toBeTruthy()
    expect(view.updatedAt).toBeTruthy()
  })
})
